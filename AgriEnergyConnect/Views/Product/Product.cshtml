@model (AgriEnergyConnect.Models.Tables.Product[] p, AppDbContext c)

@{
    ViewData["Title"] = "Product";
    ViewData["Page"] = "Product";

    // Global variable
    dynamic? userInfo = (dynamic?)Global.UserInfo;

    var farmerList = this.Model.c.Farmer.ToArray();
}

@section Styles {

    <style type="text/css">

        .content {
        color: #f0f0f0;
        }

        #background {
        background-image: url('../images/wheat-farm.png');
        background-size: 100%;
        }

    </style>

}

@section Scripts {

    <script type="text/javascript">

        // Occurs when the user clicked the 'Add Product' button.
        function AddProduct()
        {
        document.getElementById("add-product").hidden = false;
        document.getElementById("remove-product").hidden = true;
        document.getElementById("filter-product").hidden = true;
        }

        // Occurs when the user clicked the 'Cancel' button.
        function CancelAddProduct() { 
        document.getElementById("add-product").hidden = true;
        }

        // Occurs when the user clicked the 'Remove' button.
        function RemoveProduct() {
        document.getElementById("add-product").hidden = true;
        document.getElementById("remove-product").hidden = false;
        document.getElementById("filter-product").hidden = true;
        }

        // Occurs when the user clicked the 'Submit' button.
        function SubmitProduct() { 
        // Get the field data.
        let productName = document.getElementById("txtProductName").value;
        let category = document.getElementById("txtCategory").value;
        let productionDate = document.getElementById("txtProductionDate").value;
        let productType = document.getElementById("txtProductType").value;

        // Perform a validation check.
        let validation = productName.length > 0 &&
        category.length > 0 &&
        productionDate.length > 0 &&
        productType.length > 0;

        // Check if the validation succeeded.
        if(validation)
        {
        // Create a new object.
        let product = new Object();
        product.Name = productName;
        product.Category = category;
        product.ProductionDate = productionDate;
        product.ProductType = productType;

        // Perform a POST operation.
        POST("/Product/Product", JSON.stringify(product), [["ActionName", "AddProduct"]], function (status) {

        // Check if the status is OK.
        if (status == 1) { 
        document.location.reload();
        }

        });
        }
        }

        // Occurs when the user clicked the 'Remove Product' button.
        function RequestProductRemoval()
        {
        // Obtain the product id.
        let productId = document.getElementById("product").value;

        if(productId.length > 0)
        {
        // Perform a POST operation.
        POST("/Product/Product", productId, [["ActionName", "RemoveProduct"]], function (status) {

        // Check if the status is OK.
        if(status == 1)
        {
        document.location.reload();
        }
        });
        }
        }

        // Occurs when the user clicked the 'Cancel' button.
        function CancelProductRemoval() {
        document.getElementById("add-product").hidden = true;
        document.getElementById("remove-product").hidden = true;
        }

        // Occurs when the user clicked the 'Filter Products' button.
        function FilterProducts(mode) {
        if(mode == 0)
        {
        document.getElementById("filter-product").hidden = false;
        }

        if (mode == 1) {
        document.getElementById("add-product").hidden = true;
        document.getElementById("remove-product").hidden = true;
        document.getElementById("filter-product").hidden = false;
        }
        }

        // Occurs when the user clicked the 'Submit' button.
        function SubmitFilter() { 
        // Obtain the field data.
        let productName = document.getElementById("txtProductName2").value;
        let productCategory = document.getElementById("txtCategory2").value;
        let productionDate = document.getElementById("txtProductionDate2").value;
        let productType = document.getElementById("txtProductType2").value;

        // Declare a query string.
        let queryString = EMPTY_STRING;
        let containsField = false;

        if(productName.length > 0)
        {
        queryString += "&ProductName=" + productName;
        containsField = true;
        }

        if(productCategory.length > 0)
        {
        queryString += "&ProductCategory=" + productCategory;
        containsField = true;
        }

        if(productionDate.length > 0)
        {
        queryString += "&ProductionDate=" + productionDate;
        containsField = true;
        }

        if(productType.length > 0)
        {
        queryString += "&ProductType=" + productType;
        containsField = true;
        }

        if (containsField) {
        // Refresh the page with the query string.
        document.location = "/Product/Product?" + queryString.substring(1, queryString.length);
        }
        }

        // Occurs when the user clicks the Cancel button.
        function CancelFilter()
        {
        document.getElementById("filter-product").hidden = true;
        }

        // Occurs when the user clicks the Clear button.
        function ClearFilter()
        {
        document.location = "/Product/Product";
        }

        function expandView(farmerID)
        {
            let farmerProducts = document.getElementById("FARMER_PRODUCTS-" + farmerID);
            farmerProducts.hidden = !farmerProducts.hidden;

            if(farmerProducts.hidden)
            {
                document.getElementById("FARMER_PRODUCTS_IMG-" + farmerID).setAttribute("src", "../images/expand-icon.png");
            }
            else
            {
                document.getElementById("FARMER_PRODUCTS_IMG-" + farmerID).setAttribute("src", "../images/collapse-icon.png");
            }
        }

    </script>

}

<div style="margin-top: 16px;">
    <div class="content">

        @if(Global.IsEmployee)
        {
            <h1 style="background-color: white; color: black; width: fit-content; padding: 4px; border-radius: 8px">Browse Products</h1>

            <div style="margin-top: 16px; background-color: #FAFAFA; border-radius: 16px; padding: 16px">

                <button class="btn-class btn-small" onclick="FilterProducts(0)">Filter Products</button>
                <button class="btn-class btn-small" onclick="ClearFilter()">Clear Filter</button>

                <hr style="color: #333333; height: 3px" />

                <!-- Begin Filter Product section -->
                <div id="filter-product" style="color: black" hidden>

                    <h4>Filter Products</h4>

                    <p>
                        Complete at least one field to begin the filter process.
                    </p>

                    <div style="width: fit-content; color: black">
                        <table style="width: 430px" cellpadding="4">

                            <tr>
                                <th>Name:</th>
                                <td><input id="txtProductName2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Category:</th>
                                <td><input id="txtCategory2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Production Date:</th>
                                <td><input id="txtProductionDate2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Product Type:</th>
                                <td><input id="txtProductType2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                        </table>
                        <div align="right" style="margin-top: 16px">
                            <button class="btn-class2" onclick="SubmitFilter()">Submit</button>
                            <button class="btn-class2" onclick="CancelFilter()">Cancel</button>
                        </div>

                    </div>

                    <hr style="color: #333333; height: 3px" />
                </div>
                <!-- End Filter Product section -->

                <div align="center" style="color: black">
                    <h4>Products from Agri-Energy Connect</h4>
                </div>
                <hr style="color: #333333; height: 3px" />

                @foreach(var farmerObj in farmerList)
                {
                    <div style="border-color: black; border-width: 2px; border-style: solid; color: black">

                        <img id="FARMER_PRODUCTS_IMG-@farmerObj.FarmerID" src="../images/collapse-icon.png" style="width: 32px; height: 32px" onclick="expandView(@farmerObj.FarmerID)" /><b style="margin-left: 16px">@farmerObj.FirstName @farmerObj.LastName</b>

                        <table id="FARMER_PRODUCTS-@farmerObj.FarmerID" style="width: 100%; color: black">

                            <tr>
                                <th>Product Name</th>
                                <th>Category</th>
                                <th>Production Date</th>
                                <th>Type</th>
                                <th>Farmer</th>
                            </tr>

                        <!-- Iterate through the collection. -->
                        @foreach(var product in this.Model.p)
                        {
                            var farmer = farmerList.ToArray()[Utils.FindFarmer(product.FarmerID, farmerList)];

                            <tr>
                                <td>@product.Name</td>
                                <td>@product.Category</td>
                                <td>@product.ProductionDate</td>
                                <td>@product.ProductType</td>
                                <td>@farmer.FirstName @farmer.LastName</td>
                            </tr>
                        }

                        </table>

                    </div>
                }

            </div>
        }
        else
        {
            <h1 style="background-color: white; color: black; width: fit-content; padding: 4px; border-radius: 8px">Manage Your Products</h1>

            <div style="margin-top: 16px; background-color: #FAFAFA; border-radius: 16px; padding: 16px">

                <div style="padding: 8px">
                    <button class="btn-class btn-small" onclick="AddProduct()">Add</button>
                    <button class="btn-class btn-small" onclick="RemoveProduct()">Remove</button>
                    <button class="btn-class btn-small" onclick="FilterProducts(1)">Filter Products</button>
                    <button class="btn-class btn-small" onclick="ClearFilter()">Clear Filter</button>
                </div>

                <hr style="color: #333333; height: 3px" />

                <!-- Begin Add Product section -->
                <div id="add-product" style="color: black" hidden>

                    <h4>Add Product</h4>

                    <p>
                        Complete all the required fields to add a new product.
                    </p>

                    <div style="width: fit-content">
                    <table style="width: 500px">
                        <tr>
                            <th>Product Name: *</th>
                            <td><input id="txtProductName" type="text" value="" style="width: 100%" /></td>
                        </tr>
                        <tr>
                            <th>Category: *</th>
                            <td><input id="txtCategory" type="text" value="" style="width: 100%" /></td>
                        </tr>
                        <tr>
                            <th>Production Date: *</th>
                            <td><input id="txtProductionDate" type="text" value="" style="width: 100%" /></td>
                        </tr>
                        <tr>
                            <th>Product Type: *</th>
                            <td><input id="txtProductType" type="text" value="" style="width: 100%" /></td>
                        </tr>
                    </table>

                    <div align="right" style="margin-top: 16px">
                        <button class="btn-class3" onclick="SubmitProduct()">Add Product</button>
                        <button class="btn-class3" onclick="CancelAddProduct()">Cancel</button>
                    </div>
                    </div>

                    <hr style="color: #333333; height: 3px" />
                </div>
                <!-- End Add Product section -->

                <!-- Begin Remove Product section -->
                <div id="remove-product" style="color: black" hidden>
                    
                    <h4>Remove Product</h4>

                    <p>
                        Please select a product id to remove:
                    </p>

                    <div style="width: fit-content">
                    <b>Product ID: *</b>
                    <select id="product" style="margin-left: 100px; width: 160px">

                        @foreach(var product in this.Model.p)
                        {
                            <option>@product.ProductID</option>
                        }

                    </select>
                    <br />

                    <div align="right" style="margin-top: 16px">
                        <button class="btn-class2" onclick="RequestProductRemoval()">Remove</button>
                        <button class="btn-class2" onclick="CancelProductRemoval()">Cancel</button>
                    </div>
                    </div>

                    <hr style="color: #333333; height: 3px" />
                </div>
                <!-- End Remove Product section -->

                <!-- Begin Filter Product section -->
                <div id="filter-product" style="color: black" hidden>

                    <h4>Filter Products</h4>

                    <p>
                        Complete at least one field to begin the filter process.
                    </p>

                    <div style="width: fit-content; color: black">
                        <table style="width: 430px" cellpadding="4">

                            <tr>
                                <th>Name:</th>
                                <td><input id="txtProductName2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Category:</th>
                                <td><input id="txtCategory2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Production Date:</th>
                                <td><input id="txtProductionDate2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                            <tr>
                                <th>Product Type:</th>
                                <td><input id="txtProductType2" type="text" value="" style="width: 100%" /></td>
                            </tr>
                        </table>
                        <div align="right" style="margin-top: 16px">
                            <button class="btn-class2" onclick="SubmitFilter()">Submit</button>
                            <button class="btn-class2" onclick="CancelFilter()">Cancel</button>
                        </div>


                    </div>

                    <hr style="color: #333333; height: 3px" />
                </div>
                <!-- End Filter Product section -->

                <div align="center" style="color: black">
                    <h4>Products from Agri-Energy Connect</h4>
                </div>
                <hr style="color: #333333; height: 3px" />

                <table style="width: 100%; color: black">

                    <tr>
                        <th>Product Name</th>
                        <th>Category</th>
                        <th>Production Date</th>
                        <th>Type</th>
                        <th>Farmer</th>
                    </tr>

                    <!-- Iterate through the collection. -->
                    @foreach (var product in this.Model.p.Where(i => i.FarmerID == userInfo?.UserID))
                    {
                        var farmer = this.Model.c.Farmer.ToArray()[Utils.FindFarmer(product.FarmerID, farmerList)];
                       
                        <tr>
                            <td>@product.Name</td>
                            <td>@product.Category</td>
                            <td>@product.ProductionDate</td>
                            <td>@product.ProductType</td>
                            <td>@farmer.FirstName @farmer.LastName</td>
                        </tr>
                    }

                </table>

            </div>
        }

    </div>
</div>